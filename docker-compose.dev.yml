version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: collab-editor-db-dev
    environment:
      POSTGRES_DB: collab_editor_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d collab_editor_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Server (Development with hot-reload)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: collab-editor-backend-dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:password123@postgres:5432/collab_editor_dev
      JWT_SECRET: dev-secret-key
      PORT: 3000
      HOST: http://localhost
      CORS_ORIGIN: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

  # Frontend React App (Development with hot-reload)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: collab-editor-frontend-dev
    environment:
      VITE_API_URL: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_dev_data:
    driver: local
