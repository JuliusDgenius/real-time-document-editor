version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: collab-editor-db
    environment:
      POSTGRES_DB: collab_editor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d collab_editor"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - collab-network

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: collab-editor-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:password123@postgres:5432/collab_editor
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 3000
      HOST: http://localhost
      CORS_ORIGIN: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - collab-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: collab-editor-frontend
    ports:
      - "3001:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - collab-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for Socket.IO scaling (optional for Phase 1)
  redis:
    image: redis:7-alpine
    container_name: collab-editor-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - collab-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  collab-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
